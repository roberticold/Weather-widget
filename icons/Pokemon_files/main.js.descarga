
// API KEYS
let weathear_API_Key = '3a46a64595b7a7c0c8c48d9970e62d2a'
let timeZone_API_Key='STUO0MV3A2AO'


// APP CONSTS AND VARS
const KELVIN = 273;



// SELECT ELEMENTS
const iconElement = document.getElementById("weather-icon");
const tempElement = document.getElementById("temperature-value");
const descElement = document.getElementById("temperature-description");
const locationElement = document.getElementById("location");
// const notificationElement = document.getElementById("notification");
const usertimezoneElement = document.getElementById("user-time-zone");
const userHumidityElement = document.getElementById("humidity");
const userWindElement = document.getElementById("wind");

// DISPLAY WEATHER TO UI
function displayWeather(){
    iconElement.innerHTML = `<img src="icons/${weather.iconId}.png"/>`;
    tempElement.innerHTML = `${weather.temperature.value}°<span>C</span>`;
    descElement.innerHTML = weather.description;
    locationElement.innerHTML = `${weather.city}, ${weather.country}`;
    usertimezoneElement.innerHTML = `${weather.userTimeZone}`;
    userHumidityElement.innerHTML = `${weather.userHumidity}%`;
    userWindElement.innerHTML=`${weather.userwind} mph`;

}




// App data
const weather = {};

weather.temperature = {
    unit : "celsius"
}







// CHECK IF BROWSER SUPPORTS GEOLOCATION
if('geolocation' in navigator){
    navigator.geolocation.getCurrentPosition(setPosition, showError);
}else{
    notificationElement.style.display = "block";
    notificationElement.innerHTML = "<p>Browser doesn't Support Geolocation</p>";
}





// SET USER'S POSITION
function setPosition(position){
    let user_latitude = position.coords.latitude;
    let user_longitude = position.coords.longitude;
    
    showWeather(user_latitude, user_longitude);
}





// SHOW ERROR WHEN THERE IS AN ISSUE WITH GEOLOCATION SERVICE
function showError(error){
    notificationElement.style.display = "block";
    notificationElement.innerHTML = `<p> ${error.message} </p>`;
}





// GET WEATHER FROM API PROVIDER
function showWeather(latitude, longitude){
    let api_weather_address = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${weathear_API_Key}`;
    
    fetch(api_weather_address)
        .then((response)=>{
            let data = response.json();
            return data;
            // console.log(data)
            
        })
        .then((data)=>{
            weather.temperature.value = Math.floor(data.main.temp - KELVIN);
            weather.description = data.weather[0].description;
            weather.iconId = data.weather[0].icon;
            weather.city = data.name;
            weather.country = data.sys.country;
            weather.userTimeZone=data.timezone;
            weather.userHumidity=data.main.humidity;
            weather.userwind=data.wind.speed;

        })
        .then(function(){
            displayWeather();
        });
}




// C to F conversion
function celsiusToFahrenheit(temperature){
    return (temperature * 9/5) + 32;
}

// WHEN THE USER CLICKS ON THE TEMPERATURE ELEMENET
tempElement.addEventListener("click", function(){
    if(weather.temperature.value === undefined) return;
    
    if(weather.temperature.unit == "celsius"){
        let fahrenheit = celsiusToFahrenheit(weather.temperature.value);
        fahrenheit = Math.floor(fahrenheit);
        
        tempElement.innerHTML = `${fahrenheit}°<span>F</span>`;
        weather.temperature.unit = "fahrenheit";
    }else{
        tempElement.innerHTML = `${weather.temperature.value}°<span>C</span>`;
        weather.temperature.unit = "celsius"
    }
});









let havana = 'havana'
let city_url_API_Adress=`http://api.openweathermap.org/geo/1.0/direct?q=${havana}&limit=1&appid=${weathear_API_Key}`


fetch(city_url_API_Adress)
        .then((response)=>{
            let data1 = response.json();
            return data1
        
            
        })
        .then((data1)=>{
            let city_latitude =data1[0].lat
            let city_longitude =data1[0].lon
            // showWeather(city_latitude, city_longitude);
            
            

        })
        
